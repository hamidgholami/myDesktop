---
- name: "Disable translate download in apt.config.d"
  changed_when: false
  ansible.builtin.copy:
    dest: "/etc/apt/apt.conf.d/20translate"
    content: "Acquire::Languages \"none\";"
    owner: "root"
    group: "root"
    mode: "644"

- name: "Run apt-get update"
  ansible.builtin.apt:
    update_cache: true
  tags:
    - always

- name: "Install prerequisites packages"
  include_tasks: "install_packages.yml"
  loop: "{{ prerequisite | from_yaml | dict2items }}"
  no_log: true
  loop_control:
    loop_var: package_group
  register: install_packages_output
  tags:
    - "prerequisites"

- name: "Create .config in {{ user_configurations.user_name | default('vagrant') }}'s home dir"
  become: false
  ansible.builtin.file:
    path: "/home/{{ user_configurations.user_name | default('vagrant') }}/.config"
    owner: "{{ user_configurations.user_name | default('vagrant') }}"
    group: "{{ user_configurations.user_name | default('vagrant') }}"
    mode: "0755"
    state: "directory"
  tags:
    - "prerequisites"

- name: "Create .bash_profiles directory"
  changed_when: false
  file:
    path: "/home/{{ user_configurations.user_name | default('vagrant') }}/.bash_profiles"
    owner: "{{ user_configurations.user_name | default('vagrant') }}"
    group: "{{ user_configurations.user_name | default('vagrant') }}"
    mode: "0755"
    state: "directory"
  tags:
    - "prerequisites"

- name: "Add .bash_profiles in .profile"
  lineinfile:
    dest: "/home/{{ user_configurations.user_name | default('vagrant') }}/.profile"
    line: |
      if [ -f "$HOME/.bash_profiles" ]; then
          . "$HOME/.bash_profiles/*_bashrc"
      fi
  tags:
    - "prerequisites"

- name: "Import pip tasks"
  import_tasks: "pip_install.yml"

- name: "Add/Update .gitconfig"
  template:
    src: ".gitconfig.j2"
    dest: "/home/{{ user_configurations.user_name | default('vagrant') }}/.gitconfig"
    owner: "{{ user_configurations.user_name | default('vagrant') }}"
    group: "{{ user_configurations.user_name | default('vagrant') }}"
  tags:
    - "update-gitconfig"

- name: "Reboot the host"
  block:
    - name: "Print message"
      ansible.builtin.debug:
        msg:
          - "Rebooting the host: {{ ansible_hostname }} ..."

    - name: "Reboot"
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible due to display server installation/updates"
        connect_timeout: 5
        reboot_timeout: 70
        pre_reboot_delay: 0
        post_reboot_delay: 7
        test_command: uptime
  when:
    - install_packages_output.changed
    - not ansible_connection == 'local'
    - not ansible_check_mode
  tags:
    - "prerequisites"
    - "prerequisites-reboot"

- name: "Finish the playbook"
  block:
    - name: "Print message"
      ansible.builtin.debug:
        msg:
          - "Since the playbook is running on local connection, and install_packages_output has been changed."
          - "Please reboot the host and proceed with the playbook"

    - name: "Stop the playbook"
      ansible.builtin.meta: end_play
      when:
        - not ansible_check_mode
  when:
    - ansible_connection == 'local'
    - not ansible_check_mode
  tags:
    - "prerequisites"
    - "prerequisites-reboot"


# clone some git project
# git configuration
# tmux, vim, nvim, taskwarrior
...